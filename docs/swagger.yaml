definitions:
  api.defaultResponses:
    properties:
      description:
        type: string
      statusCode:
        type: integer
    type: object
  car.CarApiRequestAdd:
    properties:
      mark:
        type: string
      model:
        type: string
      regNum:
        type: string
      year:
        type: integer
    type: object
  car.CarApiRequestGetFilteredAndPaginatedInfo:
    properties:
      mark:
        items:
          type: string
        type: array
      model:
        items:
          type: string
        type: array
      name:
        items:
          type: string
        type: array
      patronymic:
        items:
          type: string
        type: array
      regNum:
        items:
          type: string
        type: array
      surname:
        items:
          type: string
        type: array
      year:
        items:
          type: integer
        type: array
    type: object
  car.CarApiRequestUpdate:
    properties:
      ownerId:
        type: integer
      regNum:
        type: string
    type: object
  car.CarApiResponseAdd:
    properties:
      id:
        type: integer
    type: object
  car.CarApiResponseGetFilteredAndPaginatedInfo:
    properties:
      currentPage:
        type: integer
      list:
        items:
          $ref: '#/definitions/car.CarApiResponseGetInfo'
        type: array
      perPage:
        type: integer
      totalPages:
        type: integer
    type: object
  car.CarApiResponseGetInfo:
    properties:
      mark:
        type: string
      model:
        type: string
      owner:
        $ref: '#/definitions/car.CarApiResponseGetInfoOwner'
      regNum:
        type: string
      year:
        type: integer
    type: object
  car.CarApiResponseGetInfoOwner:
    properties:
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  people.PeopleApiRequestAdd:
    properties:
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  people.PeopleApiResponseAdd:
    properties:
      id:
        type: integer
    type: object
info:
  contact: {}
  title: Car API
  version: "1.0"
paths:
  /:
    delete:
      operationId: delete-car
      parameters:
      - description: Car ID
        in: query
        name: carId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.defaultResponses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.defaultResponses'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.defaultResponses'
      summary: Delete Car
    post:
      consumes:
      - application/json
      operationId: add-car
      parameters:
      - description: Owner ID
        in: query
        name: ownerId
        required: true
        type: integer
      - description: Car details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/car.CarApiRequestAdd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/car.CarApiResponseAdd'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.defaultResponses'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/car.CarApiResponseAdd'
      summary: Add a new car
    put:
      consumes:
      - application/json
      operationId: update-car
      parameters:
      - description: Car ID
        in: query
        name: carId
        required: true
        type: integer
      - description: Details for updating the car
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/car.CarApiRequestUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/api.defaultResponses'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/api.defaultResponses'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.defaultResponses'
      summary: Update Car Information
  /info:
    get:
      operationId: getInfoByRegNum-car
      parameters:
      - description: Car registration number
        in: query
        name: regNum
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/car.CarApiResponseGetInfo'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/api.defaultResponses'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.defaultResponses'
      summary: Get car information by registration number
  /info/filter:
    get:
      consumes:
      - application/json
      description: Retrieve car information based on various filters and pagination
        settings.
      operationId: getFilteredAndPaginatedInfo-car
      parameters:
      - description: 'Page number for pagination (default: 1)'
        in: query
        name: page
        type: integer
      - description: Filter parameters for car information
        in: body
        name: body
        schema:
          $ref: '#/definitions/car.CarApiRequestGetFilteredAndPaginatedInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/car.CarApiResponseGetFilteredAndPaginatedInfo'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/api.defaultResponses'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/car.CarApiResponseGetFilteredAndPaginatedInfo'
      summary: Retrieve filtered and paginated car information
  /user:
    post:
      consumes:
      - application/json
      description: Add a new person to the database
      operationId: add-people
      parameters:
      - description: Person data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/people.PeopleApiRequestAdd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/people.PeopleApiResponseAdd'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.defaultResponses'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.defaultResponses'
      summary: Add a new person
swagger: "2.0"
